{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"transcribe\"\n  }, [_vm._m(0), _c(\"div\", [_c(\"p\", [_vm._v(\"Select language: \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.language,\n      expression: \"language\"\n    }],\n    attrs: {\n      placeholder: \"Please enter the language to be transcribed\"\n    },\n    domProps: {\n      value: _vm.language\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.language = $event.target.value;\n      }\n    }\n  }), _c(\"button\", {\n    staticClass: \"confirmButton\",\n    on: {\n      click: _vm.confirm\n    }\n  }, [_vm._v(\"Confirm\")])])]), _c(\"router-link\", {\n    attrs: {\n      to: \"/details\"\n    }\n  }, [_c(\"el-button\", {\n    attrs: {\n      type: \"primary\"\n    }\n  }, [_vm._v(\"Details\")])], 1)], 1);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    attrs: {\n      id: \"transcribeTipDiv\"\n    }\n  }, [_c(\"img\", {\n    attrs: {\n      id: \"transcribeTipLogo\",\n      src: require(\"@/assets/tipLogo.png\"),\n      alt: \"Logo\"\n    }\n  }), _vm._v(\"   Please select a training type according to the file format to train the model. \")]);\n}];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticClass","_m","_v","directives","name","rawName","value","language","expression","attrs","placeholder","domProps","on","input","$event","target","composing","click","confirm","to","type","staticRenderFns","id","src","require","alt","_withStripped"],"sources":["/Users/huoqingbo/Desktop/CS31-1/src/views/Transcribe.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"transcribe\" },\n    [\n      _vm._m(0),\n      _c(\"div\", [\n        _c(\"p\", [\n          _vm._v(\"Select language: \"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.language,\n                expression: \"language\",\n              },\n            ],\n            attrs: {\n              placeholder: \"Please enter the language to be transcribed\",\n            },\n            domProps: { value: _vm.language },\n            on: {\n              input: function ($event) {\n                if ($event.target.composing) return\n                _vm.language = $event.target.value\n              },\n            },\n          }),\n          _c(\n            \"button\",\n            { staticClass: \"confirmButton\", on: { click: _vm.confirm } },\n            [_vm._v(\"Confirm\")]\n          ),\n        ]),\n      ]),\n      _c(\n        \"router-link\",\n        { attrs: { to: \"/details\" } },\n        [_c(\"el-button\", { attrs: { type: \"primary\" } }, [_vm._v(\"Details\")])],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { attrs: { id: \"transcribeTipDiv\" } }, [\n      _c(\"img\", {\n        attrs: {\n          id: \"transcribeTipLogo\",\n          src: require(\"@/assets/tipLogo.png\"),\n          alt: \"Logo\",\n        },\n      }),\n      _vm._v(\n        \"   Please select a training type according to the file format to train the model. \"\n      ),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7B,IAAIC,GAAG,GAAG,IAAI;IACZC,EAAE,GAAGD,GAAG,CAACE,KAAK,CAACD,EAAE;EACnB,OAAOA,EAAE,CACP,KAAK,EACL;IAAEE,WAAW,EAAE;EAAa,CAAC,EAC7B,CACEH,GAAG,CAACI,EAAE,CAAC,CAAC,CAAC,EACTH,EAAE,CAAC,KAAK,EAAE,CACRA,EAAE,CAAC,GAAG,EAAE,CACND,GAAG,CAACK,EAAE,CAAC,mBAAmB,CAAC,EAC3BJ,EAAE,CAAC,OAAO,EAAE;IACVK,UAAU,EAAE,CACV;MACEC,IAAI,EAAE,OAAO;MACbC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAET,GAAG,CAACU,QAAQ;MACnBC,UAAU,EAAE;IACd,CAAC,CACF;IACDC,KAAK,EAAE;MACLC,WAAW,EAAE;IACf,CAAC;IACDC,QAAQ,EAAE;MAAEL,KAAK,EAAET,GAAG,CAACU;IAAS,CAAC;IACjCK,EAAE,EAAE;MACFC,KAAK,EAAE,SAAAA,CAAUC,MAAM,EAAE;QACvB,IAAIA,MAAM,CAACC,MAAM,CAACC,SAAS,EAAE;QAC7BnB,GAAG,CAACU,QAAQ,GAAGO,MAAM,CAACC,MAAM,CAACT,KAAK;MACpC;IACF;EACF,CAAC,CAAC,EACFR,EAAE,CACA,QAAQ,EACR;IAAEE,WAAW,EAAE,eAAe;IAAEY,EAAE,EAAE;MAAEK,KAAK,EAAEpB,GAAG,CAACqB;IAAQ;EAAE,CAAC,EAC5D,CAACrB,GAAG,CAACK,EAAE,CAAC,SAAS,CAAC,CACpB,CAAC,CACF,CAAC,CACH,CAAC,EACFJ,EAAE,CACA,aAAa,EACb;IAAEW,KAAK,EAAE;MAAEU,EAAE,EAAE;IAAW;EAAE,CAAC,EAC7B,CAACrB,EAAE,CAAC,WAAW,EAAE;IAAEW,KAAK,EAAE;MAAEW,IAAI,EAAE;IAAU;EAAE,CAAC,EAAE,CAACvB,GAAG,CAACK,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EACtE,CACF,CAAC,CACF,EACD,CACF,CAAC;AACH,CAAC;AACD,IAAImB,eAAe,GAAG,CACpB,YAAY;EACV,IAAIxB,GAAG,GAAG,IAAI;IACZC,EAAE,GAAGD,GAAG,CAACE,KAAK,CAACD,EAAE;EACnB,OAAOA,EAAE,CAAC,KAAK,EAAE;IAAEW,KAAK,EAAE;MAAEa,EAAE,EAAE;IAAmB;EAAE,CAAC,EAAE,CACtDxB,EAAE,CAAC,KAAK,EAAE;IACRW,KAAK,EAAE;MACLa,EAAE,EAAE,mBAAmB;MACvBC,GAAG,EAAEC,OAAO,CAAC,sBAAsB,CAAC;MACpCC,GAAG,EAAE;IACP;EACF,CAAC,CAAC,EACF5B,GAAG,CAACK,EAAE,CACJ,oFACF,CAAC,CACF,CAAC;AACJ,CAAC,CACF;AACDN,MAAM,CAAC8B,aAAa,GAAG,IAAI;AAE3B,SAAS9B,MAAM,EAAEyB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}