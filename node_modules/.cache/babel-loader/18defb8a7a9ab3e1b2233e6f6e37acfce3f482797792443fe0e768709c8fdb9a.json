{"ast":null,"code":"export default {\n  data() {\n    return {\n      name: \"details\",\n      language: \"\"\n    };\n  },\n  computed: {\n    accuracyAcount() {\n      const num = this.$store.state.detail.accuracy;\n      let correctNum = num.split('/');\n      console.log(correctNum[0] / correctNum[1]);\n      return correctNum[0] / correctNum[1] * 100;\n    }\n  },\n  created() {},\n  methods: {\n    backFun() {\n      this.$store.commit('clearDetail');\n    }\n  }\n};","map":{"version":3,"names":["data","name","language","computed","accuracyAcount","num","$store","state","detail","accuracy","correctNum","split","console","log","created","methods","backFun","commit"],"sources":["src/views/Details.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"box1\">\n            <router-link to=\"/trans\">\n                <button class=\"backButton\" @click=\"backFun()\">Back</button>\n            </router-link>\n        </div>\n\n        <div class=\"box2\">\n            <table class=\"model-table\">\n                <tr>\n                    <td>Model Name:</td>\n                    <td>{{$store.state.detail.modelName}}</td>\n                </tr>\n\n                <tr>\n                    <td>Engine type:</td>\n                    <td>{{$store.state.detail.engineName}}</td>\n                </tr>\n\n                <tr>\n                    <td>Data Set：</td>\n                    <td>{{$store.state.detail.dataSetName}}</td>\n                </tr>\n\n                <tr>\n                    <td>Model Status:</td>\n                    <td>{{$store.state.detail.status}}</td>\n                </tr>\n\n                <tr>\n                    <td>Phonetic Dictionary Name:</td>\n                    <td>{{$store.state.detail.pronDictName}}</td>\n                </tr>\n\n                <tr>\n                    <td>Accuracy:</td>\n                    <td>{{$store.state.detail.accuracy}}</td>\n                </tr>\n\n                <tr>\n                    <td>Result:</td>\n                    <td>\n                        <span v-if=\"isNaN(accuracyAcount)\">The model has not been trained</span>\n                        <span v-else>{{ accuracyAcount }}%</span>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                name: \"details\",\n                language: \"\",\n\n            };\n        },\n        computed: {\n            accuracyAcount() {\n                const num = this.$store.state.detail.accuracy\n                let correctNum = num.split('/')\n                console.log(correctNum[0] / correctNum[1])\n                return correctNum[0] / correctNum[1] * 100\n            }\n        },\n        created() {\n\n        },\n        methods: {\n            backFun() {\n                this.$store.commit('clearDetail')\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n\n    .container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: #f0f0f0;\n        height: 100vh;\n    }\n\n    .box1 {\n        position: absolute;\n        top: 160px;\n        left: 400px;\n    }\n\n    .backButton {\n        background-color: #007BFF;\n        color: #fff;\n        border: none;\n        padding: 10px 20px;\n        border-radius: 5px;\n        cursor: pointer;\n    }\n\n    .box2 {\n        background-color: #fff;\n        padding: 30px;\n        border-radius: 5px;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        text-align: center; /* 居中文本 */\n        width: 60%; /* 设置宽度为 80% */\n    }\n\n    .model-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n\n    .model-table tr {\n        border-bottom: 2px solid #ccc;\n\n    }\n\n    .model-table td {\n        padding: 10px;\n        margin: 3px;\n    }\n\n    /* Add more CSS styles as needed */\n\n\n</style>"],"mappings":"AAuDA;EACAA,KAAA;IACA;MACAC,IAAA;MACAC,QAAA;IAEA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,MAAAC,GAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,MAAA,CAAAC,QAAA;MACA,IAAAC,UAAA,GAAAL,GAAA,CAAAM,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,UAAA,MAAAA,UAAA;MACA,OAAAA,UAAA,MAAAA,UAAA;IACA;EACA;EACAI,QAAA,GAEA;EACAC,OAAA;IACAC,QAAA;MACA,KAAAV,MAAA,CAAAW,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}