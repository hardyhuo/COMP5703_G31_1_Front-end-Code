{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      name: \"transcribe\",\n      language: \"\",\n      isShow: false\n    };\n  },\n  methods: {\n    confirmFun() {\n      if (this.language === \"English\") {\n        this.isShow = true;\n      } else if (this.language === \"Chinese\") {\n        alert(\"This language is not currently included in the database\");\n      } else {\n        alert(\"Please enter the language in which you wish to transcribe\");\n      }\n      axios({\n        url: 'http://hmajax.itheima.net/api/news',\n        method: '',\n        data: {}\n      }).then(result => {\n        console.log(result);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","language","isShow","methods","confirmFun","alert","url","method","then","result","console","log","catch","err"],"sources":["src/views/Transcribe.vue"],"sourcesContent":["<template>\n    <div class=\"transcribe\">\n\n        <div id=\"transcribeTipDiv\">\n            <img id=\"transcribeTipLogo\" src=\"@/assets/tipLogo.png\" alt=\"Logo\"/>&nbsp;&nbsp;\n            Please select a training type according to the file format to train the model.\n        </div>\n\n        <div id=\"transcribeButtonDiv\" class=\"button-container\">\n            <p>Select language:</p>\n            <div class=\"language-input\">\n                <input\n                        placeholder=\"Please enter the language to be transcribed\"\n                        v-model=\"language\"\n                        class=\"language-input-box\"\n                />\n                <button class=\"confirmButton\" @click=\"confirmFun\">Confirm</button>\n            </div>\n        </div>\n\n        <div v-show=\"isShow\" id=\"modelInfoTable\">\n            <table class=\"model-table\">\n                <thead>\n                <tr id=\"tableHead\">\n                    <th>Model name</th>\n                    <th>Accuracy</th>\n                    <th>View</th>\n                    <th>Location</th>\n                    <th>Selection</th>\n                </tr>\n                </thead>\n                <tbody>\n                <!-- 这里可以添加表格行和数据 -->\n                <tr>\n                    <td>Model 1</td>\n                    <td>75%</td>\n                    <td>\n                        <router-link to=\"/details\">\n                            <el-button type=\"primary\">Details</el-button>\n                        </router-link>\n                    </td>\n                    <td>Google Cloud</td>\n                    <td>Yes</td>\n                </tr>\n                <tr>\n                    <td>Model 2</td>\n                    <td>98%</td>\n                    <td>\n                        <router-link to=\"/details\">\n                            <el-button type=\"primary\">Details</el-button>\n                        </router-link>\n                    </td>\n                    <td>Local</td>\n                    <td>No</td>\n                </tr>\n                <!-- 添加更多行和数据 -->\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n\n    export default {\n        data() {\n            return {\n                name: \"transcribe\",\n                language: \"\",\n                isShow: false,\n            };\n        },\n        methods: {\n            confirmFun() {\n                if (this.language === \"English\") {\n                    this.isShow = true\n                } else if (this.language === \"Chinese\") {\n                    alert(\"This language is not currently included in the database\")\n                } else {\n                    alert(\"Please enter the language in which you wish to transcribe\")\n                }\n\n                axios({\n                    url: 'http://hmajax.itheima.net/api/news',\n                    method: '',\n                    data: {}\n                }).then(result => {\n                    console.log(result)\n                }).catch(err => {\n                    console.log(err)\n                })\n\n\n\n\n\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .transcribe {\n        background-color: #f5f5f5;\n        padding: 20px;\n        border-radius: 10px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        text-align: center;\n        height: 80vh;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    #transcribeTipLogo {\n        width: 50px;\n        height: 50px;\n        margin-right: 10px;\n        vertical-align: middle;\n    }\n\n    #transcribeTipDiv {\n        margin-bottom: 20px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    p {\n        font-size: 18px;\n        color: #333;\n        margin: 10px;\n    }\n\n    .button-container {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex-wrap: wrap;\n    }\n\n    .language-input {\n        display: flex;\n        align-items: center;\n        margin-bottom: 10px;\n        width: 400px;\n    }\n\n    .language-input-box {\n        flex-grow: 1;\n        padding: 10px;\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        font-size: 16px;\n        margin-right: 10px;\n    }\n\n    .confirmButton {\n        background-color: #007bff;\n        color: white;\n        border: none;\n        border-radius: 5px;\n        padding: 10px 20px;\n        cursor: pointer;\n        font-size: 16px;\n    }\n\n    .confirmButton:hover {\n        background-color: #0056b3;\n    }\n\n    .model-table {\n        width: 100%;\n        border-collapse: collapse;\n        text-align: center;\n    }\n\n    #tableHead th {\n        background-color: #007bff;\n        color: white;\n        text-align: center;\n        padding: 10px;\n    }\n\n    .model-table th,\n    .model-table td {\n        border: 1px solid #ccc;\n        padding: 10px;\n    }\n\n    #modelInfoTable {\n        margin-top: 20px;\n    }\n</style>"],"mappings":"AA+DA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,SAAAH,QAAA;QACA,KAAAC,MAAA;MACA,gBAAAD,QAAA;QACAI,KAAA;MACA;QACAA,KAAA;MACA;MAEAP,KAAA;QACAQ,GAAA;QACAC,MAAA;QACAR,IAAA;MACA,GAAAS,IAAA,CAAAC,MAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,MAAA;MACA,GAAAG,KAAA,CAAAC,GAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA;IAMA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}